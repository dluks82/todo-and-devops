name: CI/CD com Coolify

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
    types: [opened, synchronize]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: 'dluks82/todo-and-devops-api'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Instalar PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 9.0.0

      - name: Instalar dependÃªncias
        run: pnpm install --frozen-lockfile

      - name: Executar testes
        run: pnpm test

  build-and-push-image:
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3

      - name: Login no GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Construir e publicar imagem no registry
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./apps/api/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Acionar deploy no Coolify
        if: success()
        run: |
          curl --request GET "${{ secrets.COOLIFY_WEBHOOK }}" \
               --header "Authorization: Bearer ${{ secrets.COOLIFY_TOKEN }}"
