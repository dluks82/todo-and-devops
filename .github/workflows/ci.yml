name: Continuous Integration

on:
  push:
    branches: [main, develop, 'feature/**']
  pull_request:
    branches: [main, develop]
  workflow_dispatch: # Permite execução manual

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-api
  NODE_VERSION: '20'

jobs:
  validation:
    name: Validação de Código
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Habilitar Corepack e Yarn 1
        run: |
          corepack enable
          corepack prepare yarn@1.22.22 --activate

      - name: Instalar dependências
        run: yarn install --frozen-lockfile

      - name: Verificar formatação
        run: yarn format:check

      - name: Executar lint
        run: yarn lint

  test:
    name: Testes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Habilitar Corepack e Yarn 1
        run: |
          corepack enable
          corepack prepare yarn@1.22.22 --activate

      - name: Instalar dependências
        run: yarn install --frozen-lockfile

      - name: Executar testes
        run: yarn test

      - name: Executar testes com cobertura
        run: yarn test:coverage

      - name: Salvar relatório de cobertura
        uses: actions/upload-artifact@v4
        with:
          name: relatorio-cobertura
          path: coverage/
          retention-days: 7

  security:
    name: Verificação de Segurança
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Habilitar Corepack e Yarn 1
        run: |
          corepack enable
          corepack prepare yarn@1.22.22 --activate

      - name: Instalar dependências
        run: yarn install --frozen-lockfile

      - name: Verificar vulnerabilidades
        run: yarn audit --groups dependencies

  build-and-push-image:
    name: Build e Push da Imagem Docker
    needs: [validation, test, security]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar QEMU
        uses: docker/setup-qemu-action@v3

      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login no GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extrair metadados para imagem Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=short
            type=ref,event=branch
            latest

      - name: Build e Push da imagem Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
